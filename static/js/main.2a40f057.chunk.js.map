{"version":3,"sources":["helpers.js","MyCard.js","AddBlock.js","Chain.js","App.js","serviceWorker.js","index.js"],"names":["createHash","_ref","timestamp","data","index","previousHash","nonce","CryptoJS","require","message","enc","Hex","parse","SHA256","toString","hashIsValid","block","hash","MyCard","recreateHash","console","log","_this","props","isValid","this","react_default","a","createElement","className","Popup","content","trigger","Icon","circular","style","color","float","name","concat","Label","as","ribbon","Input","size","marginBottom","minWidth","value","React","Component","AddBlock","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","state","newBlock","createBlock","addToChain","setState","modalOpen","clickAddButton","switchTipTool","isTipToolOpen","mode","_this2","button","onClick","aria-hidden","open","position","Modal","Header","icon","Form","Content","margin","required","onChange","e","changeData","target","label","Actions","Button","inverted","Chain","Date","toLocaleString","currentBlock","slice","proofOfWork","isGenesisBlock","previousBlock","checkNewBlockIsValid","chain","push","genesisBlock","length","Loader","marginTop","display","overflowX","overflowY","scrollbarColor","map","card","src_MyCard","key","src_AddBlock","App","maxWidth","src_Chain","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a40f057.chunk.js","sourcesContent":["function createHash({ timestamp, data, index, previousHash, nonce  }) {\n  var CryptoJS = require(\"crypto-js\");\n  var message = CryptoJS.enc.Hex.parse(timestamp + data + index + previousHash + nonce);\n  var hash = CryptoJS.SHA256(message);\n  return hash.toString();\n}\n\nfunction proofOfWork(block) {\n  while (true) {\n    block.hash = createHash(block);\n    if (block.hash.slice(0, 4) === \"0000\") {\n      return block;\n    } else {\n      block.nonce++;\n    }\n  }\n}\n\nfunction checkNewBlockIsValid(block, previousBlock) {\n  // console.log(block, previousBlock);\n  if (previousBlock.index + 1 !== block.index) {\n    //Invalid index\n    // console.log(\"invalid index\");\n    return false;\n  } else if (previousBlock.hash !== block.previousHash) {\n    //The previous hash is incorrect\n    // console.log(\"prev. hash incorrect\");\n    return false;\n  } else if (!hashIsValid(block)) {\n    //The hash isn't correct\n    // console.log(\"hash incorrect\");\n    return false;\n  }\n  return true;\n}\n\nfunction hashIsValid(block) {\n  return createHash(block) === block.hash;\n}\n\nexport { createHash, checkNewBlockIsValid, proofOfWork, hashIsValid };\n","import React from \"react\";\nimport { Input, Icon, Popup, Label } from \"semantic-ui-react\";\nimport { hashIsValid } from \"./helpers.js\";\n\nclass MyCard extends React.Component {\n  recreateHash = () => {\n    console.log(\"recreate\", this.props.block.index);\n  };\n\n  render() {\n    const isValid = hashIsValid(this.props.block);\n\n    return (\n      <div className=\"ui yellow card\">\n        <div className=\"content\">\n          {isValid ? (\n            <Popup\n              content=\"Block is valid/signed\"\n              trigger={\n                <Icon\n                  circular\n                  style={{ color: \"green\", float: \"right\" }}\n                  name=\"check\"\n                />\n              }\n            />\n          ) : (\n            <Popup\n              content=\"Block is invalid/unsigned\"\n              trigger={\n                <Icon\n                  circular\n                  style={{ color: \"red\", float: \"right\" }}\n                  name=\"x\"\n                />\n              }\n            />\n          )}\n          <div className=\"header\">\n            {this.props.block.index === 0\n              ? \"Genesis Block\"\n              : `#${this.props.block.index}`}\n          </div>\n          <div className=\"meta\">{this.props.block.timestamp}</div>\n        </div>\n        <div className=\"content\">\n          <div className=\"description\">\n            <Label as=\"a\" color=\"teal\" ribbon>\n              Data\n            </Label>\n            <br />\n            <Input\n              size=\"mini\"\n              style={{ marginBottom: \"1rem\", minWidth: \"100%\" }}\n              value={this.props.block.data}\n            />\n            <Label as=\"a\" color=\"teal\" ribbon>\n              Previous Hash\n            </Label>\n            <br />\n            <Input\n              size=\"mini\"\n              style={{ marginBottom: \"1rem\", minWidth: \"100%\" }}\n              value={this.props.block.previousHash}\n            />\n            <br />\n            <Label as=\"a\" color=\"teal\" ribbon>\n              Hash\n            </Label>\n            <br />\n            <Input\n              size=\"mini\"\n              style={{ marginBottom: \"1rem\", minWidth: \"100%\" }}\n              value={this.props.block.hash}\n            />\n            <br />\n            <Label as=\"a\" color=\"teal\" ribbon>\n              Nonce\n            </Label>\n            <br />\n            <Input\n              size=\"mini\"\n              style={{ marginBottom: \"1rem\", minWidth: \"100%\" }}\n              value={this.props.block.nonce}\n            />\n          </div>\n        </div>\n        {/* <div className=\"extra content\">\n          <Button onClick={this.recreateHash} fluid>\n            <i aria-hidden=\"true\" className=\"redo icon\" /> Recreate Hash\n          </Button>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default MyCard;\n","import React from \"react\";\nimport { Popup, Modal, Form, Header, Button, Icon } from \"semantic-ui-react\";\n\nclass AddBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTipToolOpen: true,\n      data: \"\",\n      modalOpen: false\n    };\n  }\n\n  changeData(data) {\n    this.setState({\n      data: data\n    });\n  }\n\n  handleClick = () => {\n    if (this.state.data) {\n      const newBlock = this.props.createBlock(this.state.data);\n      this.props.addToChain(newBlock);\n      this.setState({\n        modalOpen: false\n      });\n    }\n  };\n\n  clickAddButton = () => {\n    this.switchTipTool(false);\n    this.setState({\n      modalOpen: true\n    });\n  };\n\n  switchTipTool(mode) {\n    this.setState({\n      isTipToolOpen: mode\n    });\n  }\n  render() {\n    const button = (\n      <div className=\"add-button\">\n        <button\n          onClick={() => this.clickAddButton()}\n          className=\"ui circular icon button circle-button\"\n        >\n          <i aria-hidden=\"true\" className=\"plus icon\" />\n        </button>\n      </div>\n    );\n    return (\n      <div>\n        <Popup\n          content={\n            <span>\n              Add a <br />\n              new block!\n            </span>\n          }\n          open={this.state.isTipToolOpen}\n          position=\"top right\"\n          trigger={button}\n        />\n\n        <Modal open={this.state.modalOpen} trigger={button} size=\"mini\">\n          <Header icon=\"plus circle\" content=\"Add a new block!\" />\n          <Form>\n            <Modal.Content>\n              <div style={{ margin: \"10px 10px 10px 10px\" }}>\n                <Form.Input\n                  required\n                  value={this.state.data}\n                  onChange={e => this.changeData(e.target.value)}\n                  label=\"Data\"\n                />\n              </div>\n            </Modal.Content>\n            <Modal.Actions>\n              <div style={{ margin: \"10px 10px 10px 10px\" }}>\n                <Button onClick={this.handleClick} color=\"green\" inverted>\n                  <Icon name=\"checkmark\" /> Submit\n                </Button>\n              </div>\n            </Modal.Actions>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AddBlock;\n","import React from \"react\";\nimport MyCard from \"./MyCard\";\nimport AddBlock from \"./AddBlock\";\nimport { Loader } from \"semantic-ui-react\";\nimport { checkNewBlockIsValid, proofOfWork } from \"./helpers.js\";\n\nclass Chain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      genesisBlock: {\n        // index: 0,\n        // timestamp: new Date().toLocaleString(),\n        // data: \"Our genesis data\",\n        // previousHash: \"-1\",\n        // nonce: 0\n      },\n      currentBlock: {},\n      chain: []\n    };\n  }\n\n  // updateBlock = blockIndex => {\n\n  // }\n\n  createBlock = data => {\n    let newBlock = {\n      timestamp: new Date().toLocaleString(),\n      data: data,\n      index:\n        (this.state.currentBlock && this.state.currentBlock.index + 1) || 0,\n      previousHash:\n        (this.state.currentBlock && this.state.currentBlock.hash) || -1,\n      nonce: 0\n    };\n\n    newBlock = proofOfWork(newBlock);\n\n    return newBlock;\n  };\n\n  addToChain = (block, isGenesisBlock) => {\n    if (\n      isGenesisBlock ||\n      checkNewBlockIsValid(block, this.state.currentBlock)\n    ) {\n      this.state.chain.push(block);\n\n      this.setState({\n        currentBlock: block\n      });\n      return true;\n    }\n\n    return false;\n  };\n\n  componentDidMount() {\n    const genesisBlock = this.createBlock(\"Our genesis data\");\n    this.addToChain(genesisBlock, true);\n  }\n\n  render() {\n    if (this.state.chain.length === 0) {\n      return <Loader />;\n    } else {\n      return (\n        <main style={{ marginTop: \"2rem\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              overflowX: \"scroll\",\n              overflowY: \"hidden\",\n              scrollbarColor: \"red yellow !important\"\n            }}\n          >\n            {this.state.chain.map((card, index) => (\n              <MyCard key={index} block={card} />\n            ))}\n          </div>\n          <AddBlock\n            createBlock={this.createBlock}\n            addToChain={this.addToChain}\n          />\n        </main>\n      );\n    }\n  }\n}\n\nexport default Chain;\n","import React from \"react\";\nimport Chain from \"./Chain\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <header>\n          <h1>\n            blockchain\n            <br />\n            simulator .\n          </h1>\n          <div className=\"ui divider\" />\n          <p style={{ maxWidth: \"35rem\" }} className=\"marked\">\n            The blockchain starts with the genesis block and can be continued by\n            adding more blocks. Each block points to the block before through\n            the previous block's hash. The newly created hash is the fingerprint\n            of the summoned data, index, previous hash, timestamp and nonce. The\n            mined nonce makes sure that the hash begins with four zeros and\n            makes the block therefore \"signed\". <br />\n            <br />\n            Manipulating any data within any block of the blockchain (which can\n            not be simulated (yet) in this demo) breaks the chain and results in\n            invalid blocks.\n          </p>\n        </header>\n        <Chain />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}